type Flavor @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
}

type Products @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int
  Flavor: Flavor @connection
}

type Kardex @model @auth(rules: [{allow: public}]) {
  id: ID!
  initialQuantity: Float
  finalQuantity: Float
  movementType: String
  Item: Item @connection
  movementDate: AWSDateTime
}

type Order @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  dateTimeOrder: AWSDateTime!
  totalSale: Float
  SalesRecords: [SalesRecord] @connection(keyName: "byOrder", fields: ["id"])
  userID: ID
}

type Item @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  price: Float
  price2: Float
  cost: Float
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: AWSEmail!
  phone: String
  address: String!
  colony: String
  postalCode: Int
  hasDiscount: Boolean!
  Orders: [Order] @connection(keyName: "byUser", fields: ["id"])
}

type SalesRecord @model @auth(rules: [{allow: public}]) @key(name: "byOrder", fields: ["orderID"]) {
  id: ID!
  itemQuantity: Int!
  actualSale: Float
  orderID: ID
  Item: Item @connection
}
 